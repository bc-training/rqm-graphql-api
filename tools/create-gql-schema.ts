
import 'reflect-metadata';
import * as fs from 'fs';

(async () => {
    try {
        console.log(`   > \x1b[37m@proximus - Creating gql schema from\x1b[0m ${__dirname}`);

        const sourcePath = __dirname + '/../src/model/generated/rqmapi.schema-ast.graphql';
        const dataBuffer = fs.readFileSync(sourcePath, 'utf8');
        const data = dataBuffer.toString();

        const destinationPath = __dirname + '/../src/model/generated/rqmapi.schema.ts';
        const lineSeparator = `${'='.repeat(80)}\n`;
        const destinationFileHeaderContent =
            `// ${lineSeparator}` +
            `// The code in this file was generated by RQM tooling\n` +
            `// Do not modify the content of this file as it will be overwritten\n` +
            `// next time it will be generated\n` +
            `// ${lineSeparator}\n`;

        const destinationFileContent = destinationFileHeaderContent +
            'import gql from \'graphql-tag\';\n' +
            'export const typeDefs = gql`\n\n' +
            data + '`;\n';
        fs.writeFileSync(destinationPath, destinationFileContent);
        console.log(`   > \x1b[32mSuccess\x1b[0m - Schema created to ${destinationPath}.\n`);
    } catch (e) {
        console.error(`   > \x1b[31mFailure\x1b[0m - Error : ${e}\n`);
    }
})();
